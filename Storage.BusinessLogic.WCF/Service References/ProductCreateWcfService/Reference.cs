//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Storage.BusinessLogic.WCF.ProductCreateWcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductCreateWcfService.IProductCreateWcfService")]
    public interface IProductCreateWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductCreateWcfService/AddProduct", ReplyAction="http://tempuri.org/IProductCreateWcfService/AddProductResponse")]
        void AddProduct(Storage.Model.Product product, Storage.Model.Shelf shelf, Storage.Model.ProductCategory productCategory, Storage.Model.Trader trader);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductCreateWcfService/AddProduct", ReplyAction="http://tempuri.org/IProductCreateWcfService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(Storage.Model.Product product, Storage.Model.Shelf shelf, Storage.Model.ProductCategory productCategory, Storage.Model.Trader trader);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductCreateWcfServiceChannel : Storage.BusinessLogic.WCF.ProductCreateWcfService.IProductCreateWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductCreateWcfServiceClient : System.ServiceModel.ClientBase<Storage.BusinessLogic.WCF.ProductCreateWcfService.IProductCreateWcfService>, Storage.BusinessLogic.WCF.ProductCreateWcfService.IProductCreateWcfService {
        
        public ProductCreateWcfServiceClient() {
        }
        
        public ProductCreateWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductCreateWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductCreateWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductCreateWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddProduct(Storage.Model.Product product, Storage.Model.Shelf shelf, Storage.Model.ProductCategory productCategory, Storage.Model.Trader trader) {
            base.Channel.AddProduct(product, shelf, productCategory, trader);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(Storage.Model.Product product, Storage.Model.Shelf shelf, Storage.Model.ProductCategory productCategory, Storage.Model.Trader trader) {
            return base.Channel.AddProductAsync(product, shelf, productCategory, trader);
        }
    }
}
